
.alter database f1 policy streamingingestion enable; // f1 = database name

.create table CarStatus (Timestamp: datetime ,SessionUID: string, FrameIdentifier: long, SessionTime: real, PlayerCarIndex: int, VehicleIndex: int, TractionControl: int, ABS: int, FuelMix: int, FuelInTank: real, FuelCapacity: real, FuelRemainingLaps: real, MaxRPM: long, IdleRPM: long, MaxGears: int, DRSAllowed: int, FLTyreWear: int, FRTyreWear: int, RLTyreWear: int, RRTyreWear: int, ActualTyreCompound: int, TyreVisualCompound: int, FLTyreDamage: int, FRTyreDamage: int, RLTyreDamage: int, RRTyreDamage: int, FLWingDamage: int, FRWingDamage: int, RearWingDamage: int, EngineDamage: int, GearBoxDamage: int, VehicleFIAFlags: int) with (folder = "F1_2019"); 

.create table CarTelemetry (Timestamp: datetime ,SessionUID: string, FrameIdentifier: long, SessionTime: real, PlayerCarIndex: int, VehicleIndex: int, Speed: long, Throttle: real, Steering: real, Brake: real, Clutch: long, Gear: long, EngineRPM: long, DRSEnabled: long, RevLights: long, BrakeTemp: string, FLTyreSurfaceTemp: long, FRTyreSurfaceTemp: long, RLTyreSurfaceTemp: long, RRTyreSurfaceTemp: long, FLTyreInnerTemp: long, FRTyreInnerTemp: long, RLTyreInnerTemp: long, RRTyreInnerTemp: long, EngineTemp: long, FLTyrePressure: real, FRTyrePressure: real, RLTyrePressure: real, RRTyrePressure: real, FLDrivingSurface: long, FRDrivingSurface: long, RLDrivingSurface: long, RRDrivingSurface: long) ;

.create table Lap (Timestamp: datetime ,SessionUID: string, FrameIdentifier: long, SessionTime: real, PlayerCarIndex: int, VehicleIndex: int, LastLapTime: real, CurrentLapTime: real, BestLapTime: real, CarPosition: int, CurrentLapNum: int, CurrentLapInvalid: int, LapDistance: real, TotalDistance: real, GridPosition: int, PitStatus: int, TimePenalties: int, DriverStatus: int, ResultStatus: int) ;

.create table Participant (Timestamp: datetime ,SessionUID: string, FrameIdentifier: long, SessionTime: real, PlayerCarIndex: int, VehicleIndex: int, NumOfActiveCars: int, AIControlled: int, DriverId: int, TeamId: int, RaceNumber: int, Nationality: int, Name: string) ;

.create table Session (Timestamp: datetime ,SessionUID: string, FrameIdentifier: long, SessionTime: real, PlayerCarIndex: int, Weather: int, TrackTemp: int, AirTemp: int, TotalLaps: int, TrackId: int, TrackLength: long, SessionType: int, SessionDuration: long, SessionTimeLeft: long) ;

.create table Drivers (Id: int, Name: string) with (folder = "Lookup");

.create table Nationalities (Id: int, Name: string) with (folder = "Lookup");

.create table Teams (Id: int, Name: string) with (folder = "Lookup");

.create table Tracks (Id: int, Name: string) with (folder = "Lookup");

// upload data from the drivers, Nationality, teams, tracks csv into the corresponding lookup tables



.alter table CarStatus folder "F1_2019";

.alter table CarTelemetry folder "F1_2019";

.alter table Lap folder "F1_2019";

.alter table Participant folder "F1_2019";

.alter table Session folder "F1_2019";

// for f1 24 format
.create table Session24(Timestamp: datetime, SessionUID: string, SessionTime: real, FrameIdentifier: long, PlayerCarIndex: int, Weather: int, TrackTemp: int, AirTemp: int, TotalLaps: int, TrackLength: long, SessionType: int, TrackId: int, SessionTimeLeft: long, SessionDuration: long);

.create table Lap24(Timestamp: datetime, SessionUID: string, SessionTime: real, FrameIdentifier: long, PlayerCarIndex: int, VehicleIndex: int, LastLapTimeInMS: real, CurrentLapTimeInMS: real, DeltaToCarInFrontMSPart: real, DeltaToCarInFrontMinutesPart: real, DeltaToRaceLeaderMSPart: real, DeltaToRaceLeaderMinutesPart: real, LapDistance: real, TotalDistance: real, SafetyCarDelta: real, CarPosition: int, CurrentLapNum: int, PitStatus: int, NumPitStops: int, Penalties: int, GridPosition: int, DriverStatus: int, ResultStatus: int, PitLaneTimerActive: int, PitLaneTimeInLaneInMS: real, PitStopTimerInMS: real);

.create table Participant24(Timestamp: datetime, SessionUID: string, SessionTime: real, FrameIdentifier: long, PlayerCarIndex: int, VehicleIndex: int, AIControlled: int, DriverId: int, TeamId: int, RaceNumber: int, Nationality: int, Name: string, NumOfActiveCars: int) ;

.create table CarTelemetry24(Timestamp: datetime, SessionUID: string, SessionTime: real, FrameIdentifier: long, PlayerCarIndex: int, VehicleIndex: int, Speed: long, Throttle: real, Steering: real, Brake: real, Clutch: long, Gear: long, EngineRPM: long, DRSEnabled: long, RevLights: long, RevLightsBit: long, RLBrakeTemp: long, RRBrakeTemp: long, FLBrakeTemp: long, FRBrakeTemp: long, RLTyreSurfaceTemp: long, RRTyreSurfaceTemp: long, FLTyreSurfaceTemp: long, FRTyreSurfaceTemp: long, RLTyreInnerTemp: long, RRTyreInnerTemp: long, FLTyreInnerTemp: long, FRTyreInnerTemp: long, EngineTemp: long, RLTyrePressure: real, RRTyrePressure: real, FLTyrePressure: real, FRTyrePressure: real);

.create table CarStatus24(Timestamp: datetime, SessionUID: string, SessionTime: real, FrameIdentifier: long, PlayerCarIndex: int, VehicleIndex: int, TractionControl: int, ABS: int, FuelMix: int, FuelInTank: real, FuelCapacity: real, FuelRemainingLaps: real, MaxRPM: long, IdleRPM: long, MaxGears: int, DRSAllowed: int, ActualTyreCompound: int, VisualTyreCompound: int, VehicleFIAFlags: int); 

.create table CarDamage24(Timestamp: datetime, SessionUID: string, SessionTime: real, FrameIdentifier: long, PlayerCarIndex: int, VehicleIndex: int, RLTyreWear: real, RRTyreWear: real, FLTyreWear: real, FRTyreWear: real, RLTyreDamage: int, RRTyreDamage: int, FLTyreDamage: int, FRTyreDamage: int, RLBrakeDamage: int, RRBrakeDamage: int, FLBrakeDamage: int, FRBrakeDamage: int, FLWingDamage: int, FRWingDamage: int, RearWingDamage: int, FloorDamage: int, DiffuserDamage: int, SidepodDamage: int, DRSFault: int, ERSFault: int, GearBoxDamage: int, EngineDamage: int);

.drop tabble Drivers;

.drop table Nationalities;

.drop table Teams;

.drop table Tracks;

.create table Drivers (Id: int, Name: string) with (folder = "Lookup");

.create table Nationalities (Id: int, Name: string) with (folder = "Lookup");

.create table Teams (Id: int, Name: string) with (folder = "Lookup");

.create table Tracks (Id: int, Name: string) with (folder = "Lookup");

// ingest data from the ADX portal https://dataexplorer.azure.com/
